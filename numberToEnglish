#include <iostream>
#include <string>
#include <cmath>

using namespace std;

string one[] = { "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen","nineteen" };
string ten[] = { "", "" , "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty","ninety" };

// 1 or 2-digit
string num2digit(int n, string s) {
	string str = "";

	if ( (n) && (n < 20)) str += one[n];
	else {
		str += ten[n / 10] ;
		if(n) str += '-' + one[n % 10];
	}

	if (n)
		str += s;

	return str;
}

string num3digit(int n, string s) {
	string str = "";
	str += num2digit((n / 100), " hundred ") + num2digit((n % 100), "");

	if (n)
		str += s;

	return str;
}



string convertNum(int n) {
	string result = "";
	result += num2digit(n % 100, "");
	result = num2digit((n / 100) % 10, " hundred ") + result;

	if (n / 1000 > 0) {
		if ((n / 1000) % 1000 >= 100) result = num3digit((n / 1000) % 1000, " thousand ") + result;
		else result = num2digit((n / 1000) % 100, " thousand ") + result;
	}
	

	if (n / 1000000 > 0) {
		if ((n / 1000000) % 1000 >= 100) result = num3digit((n / 1000000) % 1000, " million ") + result;
		else result = num2digit((n / 1000000) % 100, " million ") + result;
	}

	return result;
}

int main() {
	int n;
	cin >> n;
	
	if (n < 0) cout << "negative ";
	n = abs(n);

	if (n == 0) cout << "zero";
	else cout << convertNum(n);

	return 0;
}
